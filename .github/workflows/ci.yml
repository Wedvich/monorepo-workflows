name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  # Detect which packages have changed
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      shared-changed: ${{ steps.changes.outputs.shared }}
      package-a-changed: ${{ steps.changes.outputs.package-a }}
      package-b-changed: ${{ steps.changes.outputs.package-b }}
      package-c-changed: ${{ steps.changes.outputs.package-c }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            shared: &shared
              - '.github/actions/**'
              - '.github/workflows/**'
              - 'packages/shared/**'
            shared-deep: &shared-deep
              - *shared
              - 'packages/shared-deep/**'
            package-a:
              - *shared
              - 'packages/a/**'
            package-b:
              - *shared
              - 'packages/b/**'
            package-c:
              - *shared
              - 'packages/c/**'
            package-d:
              - *shared
              - *shared-deep
              - 'packages/c/**'

  # Shared package job (runs first if shared changed)
  shared:
    runs-on: ubuntu-latest
    needs: [detect-changes]
    if: needs.detect-changes.outputs.shared-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Run tests and build
        uses: ./.github/actions/run-package
        with:
          package: shared

  # Shared-deep package job (runs first if shared-deep changed)
  shared-deep:
    runs-on: ubuntu-latest
    needs: [detect-changes, shared]
    if: |
      always() &&
      needs.detect-changes.outputs.shared-deep-changed == 'true' &&
      (needs.shared.result == 'success' || needs.shared.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Run tests and build
        uses: ./.github/actions/run-package
        with:
          package: shared-deep

  # Package A job
  a:
    runs-on: ubuntu-latest
    needs: [detect-changes, shared]
    if: |
      always() &&
      needs.detect-changes.outputs.package-a-changed == 'true' &&
      (needs.shared.result == 'success' || needs.shared.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Run tests and build
        uses: ./.github/actions/run-package
        with:
          package: a

  # Package B job
  b:
    runs-on: ubuntu-latest
    needs: [detect-changes, shared]
    if: |
      always() &&
      needs.detect-changes.outputs.package-b-changed == 'true' &&
      (needs.shared.result == 'success' || needs.shared.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Run tests and build
        uses: ./.github/actions/run-package
        with:
          package: b

  # Package C job
  c:
    runs-on: ubuntu-latest
    needs: [detect-changes, shared]
    if: |
      always() &&
      needs.detect-changes.outputs.package-c-changed == 'true' &&
      (needs.shared.result == 'success' || needs.shared.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Run tests and build
        uses: ./.github/actions/run-package
        with:
          package: c

  # Package D job
  d:
    runs-on: ubuntu-latest
    needs: [detect-changes, shared, shared-deep]
    if: |
      always() &&
      needs.detect-changes.outputs.package-d-changed == 'true' &&
      (needs.shared.result == 'success' || needs.shared.result == 'skipped') &&
      (needs.shared-deep.result == 'success' || needs.shared-deep.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Run tests and build
        uses: ./.github/actions/run-package
        with:
          package: d

  # Deploy to development environment
  deploy-development:
    runs-on: ubuntu-latest
    needs: [a, b, c, d]
    if: |
      always() &&
      (needs.a.result == 'success' || needs.a.result == 'skipped') &&
      (needs.b.result == 'success' || needs.b.result == 'skipped') &&
      (needs.c.result == 'success' || needs.c.result == 'skipped') &&
      (needs.d.result == 'success' || needs.d.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache

      - name: Deploy to development
        run: echo "Deploying to development environment..."
